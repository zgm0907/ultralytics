# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect
 
# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 319 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs
 
# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10
 
# YOLO11n head
#gold-yolo Gather-and-Distribute Mechanism
#https://github.com/huawei-noah/Efficient-Computing/tree/master/Detection/Gold-YOLO
head:
# Low-GD
  - [[2, 4, 6, 10], 1, SimFusion_4in, []] # 11
  - [-1, 1, IFM, [[64, 32]]] # 12
   
  - [10, 1, Conv, [512, 1, 1]] # 13
  - [[4, 6, -1], 1, SimFusion_3in, [512]] # 14
  - [[-1, 12], 1, InjectionMultiSum_Auto_pool, [512, [64, 32], 0]] # 15
  - [-1, 2, C3k2, [512, False]] # 16
  
# High-GD
  - [6, 1, Conv, [256, 1, 1]] # 17
  - [[2, 4, -1], 1, SimFusion_3in, [256]] # 18
  - [[-1, 12], 1, InjectionMultiSum_Auto_pool, [256, [64, 32], 1]] # 19
  - [-1, 2, C3k2, [256, False]] # 20  head N3
 
  - [[20, 16, 10], 1, PyramidPoolAgg, [352, 2]] # 21
  - [-1, 1, TopBasicLayer, [352, [64, 128]]] # 22
 
  - [[20, 17], 1, AdvPoolFusion, []] # 23
  - [[-1, 22], 1, InjectionMultiSum_Auto_pool, [256, [64, 128], 0]] # 24
  - [-1, 2, C3k2, [256, False]] # 25  head N4
 
  - [[-1, 13], 1, AdvPoolFusion, []] # 26
  - [[-1, 22], 1, InjectionMultiSum_Auto_pool, [512, [64, 128], 1]] # 27
  - [-1, 2, C3k2, [1024, True]] # 28    head N5
 
  - [[20, 25, 28], 1, Detect, [nc]] # Detect(P3, P4, P5)
 
